apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-setup-default-user-v2"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        aadpodidbinding: "osdu-airflow2-identity"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: python:3.6.12-slim-buster
        command: ['sh','-c','pip install --user -r /post-install-scripts/requirements.txt && python /post-install-scripts/create_default_user.py']
        volumeMounts:
        - name: config-volume
          mountPath: /post-install-scripts
        - name: azure-keyvault
          mountPath: "/mnt/azure-keyvault"
          readOnly: true
        env:
        - name: DATABASE_USER
        {{- if .Values.pgbouncer.enabled }}
          value: {{ .Values.pgbouncer.airflowdb.user }}
        {{- else }}
          value: {{ .Values.airflow.externalDatabase.user }}
        {{- end }}
        - name: DATABASE_HOST
        {{- if .Values.pgbouncer.enabled }}
          value: {{ .Values.pgbouncer.airflowdb.host }}
        {{- else }}
          value: {{ .Values.airflow.externalDatabase.host }}
        {{- end }}
        - name: DATABASE_DB
        {{- if .Values.pgbouncer.enabled }}
          value: {{ .Values.pgbouncer.airflowdb.name }}
        {{- else }}
          value: {{ .Values.airflow.externalDatabase.database }}
        {{- end }}
        - name: DATABASE_USER_PASS
          valueFrom:
            secretKeyRef:
            {{- if .Values.pgbouncer.enabled }}
              name: {{ .Values.pgbouncer.airflowdb.passwordSecret }}
              key: {{ .Values.pgbouncer.airflowdb.passwordSecretKey }}
            {{- else }}
              name: {{ .Values.airflow.externalDatabase.passwordSecret }}
              key: {{ .Values.airflow.externalDatabase.passwordSecretKey }}
            {{- end }}
        - name: AIRFLOW_ADMIN
          value: {{ .Values.airflowLogin.name }}
        - name: AIRFLOW_ADMIN_PASS
          valueFrom:
            secretKeyRef:
              name: airflow
              key: admin-password
        - name: AIRFLOW_RBAC_CREATE_USER
          value: "{{ .Values.customConfig.rbac.createUser }}"
        - name: AIRFLOW_RBAC_ENABLED
          value: "{{ .Values.airflow.airflow.config.AIRFLOW__WEBSERVER__RBAC }}"
      volumes:
      - name: config-volume
        configMap:
          name: post-install-job-config
      - name: azure-keyvault
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: azure-keyvault-airflow